import RPi.GPIO as GPIO
import time

GPIO.setmode(GPIO.BCM)

dataPin, latchPin, clockPin = 23, 24, 25

pattern = 0b11111111 # pattern to display

class shifter:
    def __init__(self, serialPin, clockPin, latchPin):

        self.serialPin = serialPin
        self.clockPin = clockPin
        self.latchPin = latchPin

        GPIO.setup(self.serialPin, GPIO.OUT)
        GPIO.setup(self.latchPin, GPIO.OUT, initial=0)
        GPIO.setup(self.clockPin, GPIO.OUT, initial=0)

        print(f"Shifter initialized on pins: ", pattern)


    def shift(self, pattern):
        print(f"shifting pattern")

        for i in range(8):
            GPIO.output(self.serialPin, pattern & (1<<i))
            self._ping(self.clockPin)

        self._ping(self.latchPin)
        print("Pattern should be printed")

    def _ping(self, pin):
        GPIO.output(pin, 1)
        time.sleep(0)
        GPIO.output(pin, 0)
        time.sleep(0)


print("Starting shift register rest...")
my_shifter = shifter(23, 25, 24)

pattern = 0b01100110

print("Testing all on pattern")
my_shifter.shift(pattern)

try:
    while 1: pass
except:
    GPIO.cleanup()